/* 
 * Copyright 2012-2018 Open Source Robotics Foundation 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0 
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 */ 
 
#ifndef __sensor_msgs__msg__BatteryState__idl 
#define __sensor_msgs__msg__BatteryState__idl 
 
#include "std_msgs/msg/Header.idl" 
 
module sensor_msgs { module msg { 
 
const octet BatteryState__POWER_SUPPLY_STATUS_UNKNOWN = 0; 
const octet BatteryState__POWER_SUPPLY_STATUS_CHARGING = 1; 
const octet BatteryState__POWER_SUPPLY_STATUS_DISCHARGING = 2; 
const octet BatteryState__POWER_SUPPLY_STATUS_NOT_CHARGING = 3; 
const octet BatteryState__POWER_SUPPLY_STATUS_FULL = 4; 
const octet BatteryState__POWER_SUPPLY_HEALTH_UNKNOWN = 0; 
const octet BatteryState__POWER_SUPPLY_HEALTH_GOOD = 1; 
const octet BatteryState__POWER_SUPPLY_HEALTH_OVERHEAT = 2; 
const octet BatteryState__POWER_SUPPLY_HEALTH_DEAD = 3; 
const octet BatteryState__POWER_SUPPLY_HEALTH_OVERVOLTAGE = 4; 
const octet BatteryState__POWER_SUPPLY_HEALTH_UNSPEC_FAILURE = 5; 
const octet BatteryState__POWER_SUPPLY_HEALTH_COLD = 6; 
const octet BatteryState__POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE = 7; 
const octet BatteryState__POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE = 8; 
const octet BatteryState__POWER_SUPPLY_TECHNOLOGY_UNKNOWN = 0; 
const octet BatteryState__POWER_SUPPLY_TECHNOLOGY_NIMH = 1; 
const octet BatteryState__POWER_SUPPLY_TECHNOLOGY_LION = 2; 
const octet BatteryState__POWER_SUPPLY_TECHNOLOGY_LIPO = 3; 
const octet BatteryState__POWER_SUPPLY_TECHNOLOGY_LIFE = 4; 
const octet BatteryState__POWER_SUPPLY_TECHNOLOGY_NICD = 5; 
const octet BatteryState__POWER_SUPPLY_TECHNOLOGY_LIMN = 6; 
 
struct BatteryState { 
    std_msgs::msg::Header header; 
    float voltage; 
    float current; 
    float charge; 
    float capacity; 
    float design_capacity; 
    float percentage; 
    octet power_supply_status; 
    octet power_supply_health; 
    octet power_supply_technology; 
    boolean present; 
    sequence<float> cell_voltage; 
    string location; 
    string serial_number; 
}; 
 
}; };  // module msg::sensor_msgs 
 
#endif  // __sensor_msgs__msg__BatteryState__idl 
